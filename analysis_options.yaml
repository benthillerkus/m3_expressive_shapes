# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

formatter:
  page_width: 80
  trailing_commas: automate

analyzer:
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    - always_declare_return_types
    - avoid_positional_boolean_parameters
    - avoid_void_async
    - cast_nullable_to_non_nullable
    - conditional_uri_does_not_exist
    - eol_at_end_of_file
    - implicit_reopen
    - no_adjacent_strings_in_list
    - unnecessary_statements
    - avoid_double_and_int_checks
    - avoid_escaping_inner_quotes
    - join_return_with_assignment
    - leading_newlines_in_multiline_strings
    - noop_primitive_operations
    - secure_pubspec_urls
    - one_member_abstracts
    - parameter_assignments
    - prefer_asserts_in_initializer_lists
    - prefer_constructors_over_static_methods
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_int_literals
    - prefer_mixin
    - prefer_null_aware_method_calls
    - sized_box_shrink_expand
    - tighten_type_of_initializing_formals
    - type_literal_in_constant_pattern
    - unnecessary_await_in_return
    - unnecessary_breaks
    - unnecessary_lambdas
    - unnecessary_parenthesis
    - unnecessary_raw_strings
    - use_colored_box
    - use_decorated_box
    - use_enums
    - use_is_even_rather_than_modulo
    - use_named_constants
    - use_raw_strings
    - require_trailing_commas
    - prefer_const_constructors
