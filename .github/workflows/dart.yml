# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # From https://github.com/benthillerkus/db_migrations_with_multiverse_time_travel/blob/main/.github/workflows/dart.yml
  packages:
    runs-on: ubuntu-latest
    name: Gather Packages
    outputs:
      packages: ${{ steps.getpackages.outputs.paths }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: dart-lang/setup-dart@v1

      - id: getpackages
        run: |
          echo "paths=$(dart pub workspace list --json | jq -r -c '[.packages[] | select(.name != "workspace") | .path]' | sed 's|${{ github.workspace }}/||g')" >> $GITHUB_OUTPUT

  test:
    needs: packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ fromJson(needs.packages.outputs.packages) }}
      fail-fast: false
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
  
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - run: flutter --version
      - run: flutter pub get

      - name: Install coverage tool
        run: dart pub global activate coverage

      - name: Run Tests
        # run: dart pub global run coverage:test_with_coverage --branch-coverage --function-coverage
        run: flutter test
        working-directory: ${{ matrix.package }}
        # Only run tests if there are any files in the `test` directory
        if: ${{ always() && hashFiles(format('{0}/test/**', matrix.package)) != '' }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ${{ matrix.package }}/coverage
          flags: ${{ matrix.package }}

  check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ fromJson(needs.packages.outputs.packages) }}
      fail-fast: false
    permissions:
      contents: read
    needs: packages
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - run: flutter --version
      - run: flutter pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
        working-directory: ${{ matrix.package }}

      - name: Analyze project source
        run: dart analyze
        working-directory: ${{ matrix.package }}
